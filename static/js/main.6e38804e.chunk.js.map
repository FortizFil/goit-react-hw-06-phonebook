{"version":3,"sources":["components/ContactItem/contactItem.module.css","redux/contacts/contacts-actions.jsx","redux/contacts/contacts-reducer.jsx","redux/store.jsx","components/ContactForm/contactForm.jsx","components/ContactItem/contactItem.jsx","components/ContactsList/contactsList.jsx","components/Filter/filter.jsx","App.js","index.js","components/ContactForm/contactForm.module.css","components/Filter/filter.module.css"],"names":["module","exports","contactsActions","addContact","createAction","text","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","ContactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ContactForm","useSelector","dispatch","useDispatch","className","s","contact__form","onSubmit","e","preventDefault","target","name","find","el","toLowerCase","value","alert","contact__label","contact__input","type","pattern","title","required","contact__btn","ContactItem","contact__item","onClick","ContactsList","trimFilter","trim","map","normalizedFilter","contact","includes","getVisibleContacts","Filter","filter__label","filter__name","filter__input","onChange","App","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6e38804e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"contactItem_contact__item__2j8QM\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (text, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    text,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst contactsActions = { addContact, deleteContact, changeFilter };\r\nexport default contactsActions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport combineReducers from './contacts/contacts-reducer';\r\n\r\nconst ContactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(ContactsPersistConfig, combineReducers),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport s from './contactForm.module.css';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst ContactForm = () => {\r\n  const { contacts } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = e.target;\r\n\r\n    const repeatName = contacts.items.find(\r\n      el => el.text.toLowerCase() === name.value.toLowerCase(),\r\n    );\r\n\r\n    repeatName\r\n      ? alert(`${name.value} is already in your contacts!`)\r\n      : dispatch(contactsActions.addContact(name.value, number.value));\r\n\r\n    name.value = '';\r\n    number.value = '';\r\n  };\r\n\r\n  return (\r\n    <form className={s.contact__form} onSubmit={e => onSubmit(e)}>\r\n      <h3 className={s.contact__label}>Name</h3>\r\n      <input\r\n        className={s.contact__input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <h3 className={s.contact__label}>Number</h3>\r\n      <input\r\n        className={s.contact__input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button className={s.contact__btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './contactItem.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst ContactItem = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li className={s.contact__item}>\r\n      {name}:{}\r\n      {number}\r\n      <button\r\n        type=\"button\"\r\n        className=\"TodoList__btn\"\r\n        id={id}\r\n        onClick={e => dispatch(contactsActions.deleteContact(e.target.id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactItem from '../ContactItem/contactItem';\r\n\r\nconst ContactsList = () => {\r\n  const { contacts } = useSelector(state => state);\r\n  const trimFilter = contacts.filter.trim() === '';\r\n  const filter = contacts.filter;\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.items.filter(contact => contact.text.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {trimFilter\r\n        ? contacts.items.map(({ id, text, number }) => (\r\n            <ContactItem key={id} id={id} name={text} number={number} />\r\n          ))\r\n        : getVisibleContacts().map(({ id, text, number }) => (\r\n            <ContactItem key={id} id={id} name={text} number={number} />\r\n          ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from './filter.module.css';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filter__label}>\r\n      <h3 className={s.filter__name}>Find contacts by name</h3>\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useSelector } from 'react-redux';\nimport ContactForm from './components/ContactForm/contactForm';\nimport ContactsList from './components/ContactsList/contactsList';\nimport Filter from './components/Filter/filter';\n\nconst App = () => {\n  const { contacts } = useSelector(state => state);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {contacts.items.length > 0 ? (\n        <>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactsList />\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"contactForm_contact__form__3oHmi\",\"contact__label\":\"contactForm_contact__label__3Rdn5\",\"contact__input\":\"contactForm_contact__input__1Vz8V\",\"contact__btn\":\"contactForm_contact__btn__3WYpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"filter_filter__label__hAGcf\",\"filter__input\":\"filter_filter__input__3C6BI\",\"filter__name\":\"filter_filter__name__1Ws8o\"};"],"sourceRoot":""}